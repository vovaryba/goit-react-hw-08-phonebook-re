{"version":3,"file":"static/js/login-page.4a627037.chunk.js","mappings":"0OACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAwF,yBAAxF,EAA0H,0BAA1H,EAA4J,yB,SC6E5J,EAzEkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,KAAM,aATNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAcf,OACE,iCACE,gDACA,kBACEE,SAAUJ,GATK,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BL,EAASa,EAAAA,EAAAA,MAAqB,CAAET,MAAAA,EAAOC,SAAAA,KACvCI,OAQIK,UAAWC,EACXC,aAAa,MAHf,WAKE,mBAAOF,UAAWC,EAAlB,mBAEE,0BACED,UAAWC,EACXE,KAAK,QACLC,KAAK,SACDX,EAAS,QAAS,CACpBY,SAAU,CAAEC,OAAO,EAAMC,QAAS,YAClCC,QAAS,CACPF,MACE,wEACFC,QAAS,kCAKhBX,EAAON,QAAS,cAAGU,UAAWC,EAAd,SAAwBL,EAAON,MAAMiB,WACtD,mBAAOP,UAAWC,EAAlB,sBAEE,0BACED,UAAWC,EACXE,KAAK,WACLC,KAAK,YACDX,EAAS,WAAY,CACvBY,SAAU,CAAEC,OAAO,EAAMC,QAAS,YAClCC,QAAS,CACPF,MAAO,+BACPC,QACE,yEAKTX,EAAOL,WACN,cAAGS,UAAWC,EAAd,SAAwBL,EAAOL,SAASgB,WAE1C,mBAAQJ,KAAK,SAASH,UAAWC,EAAjC","sources":["webpack://goit-react-hw-08-phonebook-re/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginPage_form__bkZcj\",\"label\":\"LoginPage_label__kYxGE\",\"input\":\"LoginPage_input__041zi\",\"button\":\"LoginPage_button__IdDho\",\"error\":\"LoginPage_error__aaM9E\"};","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\nimport s from './LoginPage.module.css';\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const onSubmitForm = ({ email, password }) => {\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Authorization page</h2>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmitForm)}\r\n        className={s.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            {...register('email', {\r\n              required: { value: true, message: 'Required' },\r\n              pattern: {\r\n                value:\r\n                  /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\r\n                message: 'Enter the correct email',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.email && <p className={s.error}>{errors.email.message}</p>}\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            {...register('password', {\r\n              required: { value: true, message: 'Required' },\r\n              pattern: {\r\n                value: /^(?=.*[0-9])(?=.*[a-z]).{6,}/,\r\n                message:\r\n                  'Password must contain at least 6 lowercase letters and numbers',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.password && (\r\n          <p className={s.error}>{errors.password.message}</p>\r\n        )}\r\n        <button type=\"submit\" className={s.button}>\r\n          Log in\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["dispatch","useDispatch","useForm","defaultValues","email","password","mode","register","handleSubmit","reset","errors","formState","onSubmit","authOperations","className","s","autoComplete","type","name","required","value","message","pattern"],"sourceRoot":""}