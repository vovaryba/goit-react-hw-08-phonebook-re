{"version":3,"file":"static/js/phonebook-page.43f9114e.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/phonebook/phonebookSelectors.js","webpack://goit-react-hw-08-phonebook-re/./src/components/AddContactForm/AddContactForm.module.css?92ef","components/AddContactForm/AddContactForm.js","webpack://goit-react-hw-08-phonebook-re/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook-re/./src/components/List/List.module.css?2bcc","components/List/List.js","webpack://goit-react-hw-08-phonebook-re/./src/pages/PhonebookPage/PhonebookPage.module.css?4961","pages/PhonebookPage/PhonebookPage.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getIsLoading = state => state.contacts.isLoading;\r\nexport const getError = state => state.contacts.error;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddContactForm_form__kUQ6h\",\"label\":\"AddContactForm_label__yACYa\",\"input\":\"AddContactForm_input__Lot1m\",\"button\":\"AddContactForm_button__3q7Qf\",\"error\":\"AddContactForm_error__2ZW3O\"};","import { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { phonebookSelectors, phonebookOperations } from 'redux/phonebook';\r\nimport s from './AddContactForm.module.css';\r\n\r\nconst AddContactForm = () => {\r\n  const contacts = useSelector(phonebookSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      name: '',\r\n      number: '',\r\n    },\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const onSubmitForm = ({ name, number }) => {\r\n    const notUniqueContact = contacts.find(\r\n      prevContact => prevContact.name === name,\r\n    );\r\n\r\n    if (notUniqueContact) {\r\n      toast.error(` ${notUniqueContact.name} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(phonebookOperations.addContact({ name, number }));\r\n\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmitForm)}\r\n        className={s.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            {...register('name', {\r\n              required: { value: true, message: 'Required' },\r\n              pattern: {\r\n                value:\r\n                  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n                message:\r\n                  'Name may contain only letters, apostrophe, dash and spaces',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.name && <p className={s.error}>{errors.name.message}</p>}\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            {...register('number', {\r\n              required: { value: true, message: 'Required' },\r\n              pattern: {\r\n                value:\r\n                  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n                message:\r\n                  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.number && <p className={s.error}>{errors.number.message}</p>}\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__rGsQ8\",\"label\":\"Filter_label__jd56n\",\"input\":\"Filter_input__Fn28o\"};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { phonebookActions, phonebookSelectors } from 'redux/phonebook';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(phonebookSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(phonebookActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"List_button__jxIfW\"};","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phonebookSelectors, phonebookOperations } from 'redux/phonebook';\r\nimport s from './List.module.css';\r\n\r\nconst List = () => {\r\n  const contacts = useSelector(phonebookSelectors.getFilteredContacts);\r\n  const isLoading = useSelector(phonebookSelectors.getIsLoading);\r\n  const error = useSelector(phonebookSelectors.getError);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(phonebookOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onDeleteContact = id => dispatch(phonebookOperations.deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      {error && <h2>{error}</h2>}\r\n      {isLoading && <h2>Loading...</h2>}\r\n      {contacts.length > 0 && !isLoading && (\r\n        <ul>\r\n          {contacts.map(contact => (\r\n            <li key={contact.id}>\r\n              {contact.name}: {contact.number}\r\n              <button\r\n                className={s.button}\r\n                onClick={() => onDeleteContact(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PhonebookPage_title__hTA19\"};","import AddContactForm from 'components/AddContactForm';\r\nimport Filter from 'components/Filter';\r\nimport List from 'components/List';\r\nimport s from './PhonebookPage.module.css';\r\n\r\nconst PhonebookPage = () => {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Phonebook</h2>\r\n      <AddContactForm />\r\n\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <Filter />\r\n      <List />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","getFilteredContacts","normalizedFilter","toLowerCase","includes","useSelector","phonebookSelectors","dispatch","useDispatch","useForm","defaultValues","number","mode","register","handleSubmit","reset","errors","formState","onSubmit","notUniqueContact","prevContact","toast","phonebookOperations","addContact","className","s","autoComplete","type","required","message","pattern","onChange","e","phonebookActions","changeFilter","target","useEffect","fetchContacts","contact","onClick","id","deleteContact"],"sourceRoot":""}