{"version":3,"file":"static/js/register-page.da6df04d.chunk.js","mappings":"4OACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAmI,6BAAnI,EAAwK,4B,SC+FxK,EA3FqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,KAAM,aAVNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAef,OACE,iCACE,+CACA,kBACEE,SAAUJ,GATK,SAAC,GAA+B,IAA7BL,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnCN,EAASc,EAAAA,EAAAA,SAAwB,CAAEV,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAChDI,OAQIK,UAAWC,EACXC,aAAa,MAHf,WAKE,mBAAOF,UAAWC,EAAlB,kBAEE,0BACED,UAAWC,EACXE,KAAK,OACLd,KAAK,QACDI,EAAS,OAAQ,CACnBW,SAAU,CAAEC,OAAO,EAAMC,QAAS,YAClCC,QAAS,CACPF,MAAO,oDACPC,QACE,8EAKTV,EAAOP,OAAQ,cAAGW,UAAWC,EAAd,SAAwBL,EAAOP,KAAKiB,WACpD,mBAAON,UAAWC,EAAlB,mBAEE,0BACED,UAAWC,EACXE,KAAK,QACLd,KAAK,SACDI,EAAS,QAAS,CACpBW,SAAU,CAAEC,OAAO,EAAMC,QAAS,YAClCC,QAAS,CACPF,MACE,wEACFC,QAAS,kCAKhBV,EAAON,QAAS,cAAGU,UAAWC,EAAd,SAAwBL,EAAON,MAAMgB,WACtD,mBAAON,UAAWC,EAAlB,sBAEE,0BACED,UAAWC,EACXE,KAAK,WACLd,KAAK,YACDI,EAAS,WAAY,CACvBW,SAAU,CAAEC,OAAO,EAAMC,QAAS,YAClCC,QAAS,CACPF,MAAO,+BACPC,QACE,yEAKTV,EAAOL,WACN,cAAGS,UAAWC,EAAd,SAAwBL,EAAOL,SAASe,WAE1C,mBAAQH,KAAK,SAASH,UAAWC,EAAjC","sources":["webpack://goit-react-hw-08-phonebook-re/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterPage_form__UmdoZ\",\"label\":\"RegisterPage_label__b-S1o\",\"input\":\"RegisterPage_input__AdSgP\",\"button\":\"RegisterPage_button__Oz-Wo\",\"error\":\"RegisterPage_error__eXApx\"};","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\nimport s from './RegisterPage.module.css';\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const onSubmitForm = ({ name, email, password }) => {\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Registration page</h2>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmitForm)}\r\n        className={s.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            {...register('name', {\r\n              required: { value: true, message: 'Required' },\r\n              pattern: {\r\n                value: /^[a-zA-Z0-9]+(([' -][a-zA-Z0-9 ])?[a-zA-Z0-9]*)*$/,\r\n                message:\r\n                  'Name may contain only letters, numbers, apostrophe, dash and spaces',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.name && <p className={s.error}>{errors.name.message}</p>}\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            {...register('email', {\r\n              required: { value: true, message: 'Required' },\r\n              pattern: {\r\n                value:\r\n                  /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\r\n                message: 'Enter the correct email',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.email && <p className={s.error}>{errors.email.message}</p>}\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            {...register('password', {\r\n              required: { value: true, message: 'Required' },\r\n              pattern: {\r\n                value: /^(?=.*[0-9])(?=.*[a-z]).{7,}/,\r\n                message:\r\n                  'Password must contain at least 6 lowercase letters and numbers',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.password && (\r\n          <p className={s.error}>{errors.password.message}</p>\r\n        )}\r\n        <button type=\"submit\" className={s.button}>\r\n          Register\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["dispatch","useDispatch","useForm","defaultValues","name","email","password","mode","register","handleSubmit","reset","errors","formState","onSubmit","authOperations","className","s","autoComplete","type","required","value","message","pattern"],"sourceRoot":""}